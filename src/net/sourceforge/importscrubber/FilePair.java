package net.sourceforge.importscrubber;import java.io.File;import java.io.FilenameFilter;import java.util.ArrayList;import java.util.Arrays;import java.util.List;import java.util.ListIterator;/**
 * This class encapsulates the source & class files
 */public class FilePair {    private File sourceFile;    private File classFile;    /** * * @param sourceFile * @param classFile */    public FilePair(File sourceFile, File classFile) {       this.sourceFile = sourceFile;       this.classFile = classFile;    }    public File getSourceFile() {        return sourceFile;    }    public ListIterator getClassFiles() {        List files = new ArrayList();        files.add(classFile);        if (classFile.getParent() != null) {            File dir = new File(classFile.getParent());            files.addAll(Arrays.asList(dir.listFiles(new InnerClassFilter())));        }        return files.listIterator();    }    public String toString() {        return sourceFile.getAbsolutePath();    }    /** * A filter which only accepts inner classes. */    private class InnerClassFilter implements FilenameFilter {        public boolean accept(File dir, String name) {            // make sure we only get inner classes            if (name.indexOf("$") == -1) {                return false;            }            // make sure we get this class's inner classes            String className = classFile.getName();            className = className.substring(0, className.indexOf("."));            return name.startsWith(className);        }    }}